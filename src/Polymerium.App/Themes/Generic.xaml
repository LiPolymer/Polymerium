<!-- Copyright (c) Microsoft Corporation and Contributors. -->
<!-- Licensed under the MIT License. -->

<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:Polymerium.App.Controls"
    xmlns:ui="using:CommunityToolkit.WinUI.UI"
    xmlns:animations="using:CommunityToolkit.WinUI.UI.Animations"
    xmlns:behaviors="using:CommunityToolkit.WinUI.UI.Behaviors"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:triggers="using:CommunityToolkit.WinUI.UI.Triggers"
    xmlns:interactions="using:Microsoft.Xaml.Interactions.Core"
    xmlns:media="using:CommunityToolkit.WinUI.UI.Media">

    <SolidColorBrush x:Key="CardBackgroundBrush" Color="{StaticResource LayerOnAcrylicFillColorDefault}" />
    <SolidColorBrush x:Key="CardStrokeBrush" Color="{StaticResource ControlStrokeColorDefault}" />
    <SolidColorBrush x:Key="FloatLayerBackgroundBrush" Color="{StaticResource CardBackgroundFillColorDefault}"/>
    <CornerRadius x:Key="ContentAreaCornerRadius">10</CornerRadius>
    <CornerRadius x:Key="ItemAreaCornerRadius">5</CornerRadius>

    <Style TargetType="controls:CustomDialog" BasedOn="{StaticResource DefaultCustomDialogStyle}" />

    <Style x:Name="DefaultCustomDialogStyle" TargetType="controls:CustomDialog">
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
        <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
        <Setter Property="BorderBrush" Value="{ThemeResource ContentDialogBorderBrush}" />
        <Setter Property="BorderThickness" Value="{ThemeResource ContentDialogBorderWidth}" />
        <Setter Property="Background" Value="{ThemeResource ContentDialogBackground}" />
        <Setter Property="Foreground" Value="{ThemeResource ContentDialogForeground}" />
        <Setter Property="CornerRadius" Value="{ThemeResource ContentAreaCornerRadius}"/>
        <Setter Property="Padding" Value="{ThemeResource ContentDialogPadding}" />
        <Setter Property="MinWidth" Value="248" />
        <Setter Property="MinHeight" Value="100" />
        <Setter Property="OperationPadding" Value="25" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:CustomDialog">
                    <Border x:Name="Layout">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="DialogActivationStates">
                                <VisualState x:Name="DialogShown">
                                    <VisualState.Setters>
                                        <Setter Target="Root.Visibility" Value="Visible" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="DialogHidden" />
                                <VisualStateGroup.Transitions>
                                    <VisualTransition To="DialogShown">
                                        <Storyboard x:Name="DialogShownStoryboard">
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Root"
                                                                       Storyboard.TargetProperty="Opacity">
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0.0" />
                                                <LinearDoubleKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="1.0" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BorderScaleTransform" Storyboard.TargetProperty="ScaleX">
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="1.05" />
                                                <SplineDoubleKeyFrame KeyTime="{StaticResource ControlNormalAnimationDuration}" KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" Value="1.0" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BorderScaleTransform" Storyboard.TargetProperty="ScaleY">
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="1.05" />
                                                <SplineDoubleKeyFrame KeyTime="{StaticResource ControlNormalAnimationDuration}" KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" Value="1.0" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition To="DialogHidden">
                                        <Storyboard x:Name="DialogHiddenStoryboard">
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <!-- code-behind animation instead -->
                                            <!-- <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity"> -->
                                            <!--     <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="1.0" /> -->
                                            <!--     <LinearDoubleKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="0.0" /> -->
                                            <!-- </DoubleAnimationUsingKeyFrames> -->
                                            <!-- <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BorderScaleTransform" Storyboard.TargetProperty="ScaleX"> -->
                                            <!--     <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="1.0" /> -->
                                            <!--     <SplineDoubleKeyFrame KeyTime="{StaticResource ControlFastAnimationDuration}" KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" Value="1.05" /> -->
                                            <!-- </DoubleAnimationUsingKeyFrames> -->
                                            <!-- <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BorderScaleTransform" Storyboard.TargetProperty="ScaleY"> -->
                                            <!--     <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="1.0" /> -->
                                            <!--     <SplineDoubleKeyFrame KeyTime="{StaticResource ControlFastAnimationDuration}" KeySpline="{StaticResource ControlFastOutSlowInKeySpline}" Value="1.05" /> -->
                                            <!-- </DoubleAnimationUsingKeyFrames> -->
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="OperationAreaStates">
                                <VisualState x:Name="WithOperation">
                                    <VisualState.Setters>
                                        <Setter Target="OperationArea.Visibility" Value="Visible" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="DefaultOperation" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="Root" Visibility="Visible">
                            <Rectangle x:Name="SmokeBackground" Fill="{ThemeResource ContentDialogSmokeFill}" />
                            <Border x:Name="Frame" VerticalAlignment="Center" HorizontalAlignment="Center"
                                    CornerRadius="{TemplateBinding CornerRadius}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    Background="{TemplateBinding Background}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    RenderTransformOrigin="0.5,0.5"  Margin="{ThemeResource ContentDialogPadding}"
                                    MinWidth="{TemplateBinding MinWidth}" MinHeight="{TemplateBinding MinHeight}">
                                <Border.RenderTransform>
                                    <ScaleTransform x:Name="BorderScaleTransform" />
                                </Border.RenderTransform>
                                <Grid RowDefinitions="*,Auto">
                                    <Border x:Name="ContentArea" Background="{ThemeResource ContentDialogTopOverlay}">
                                        <ContentPresenter x:Name="ContentContainer" Margin="{TemplateBinding Padding}" ContentTemplate="{TemplateBinding ContentTemplate}" />
                                    </Border>
                                    <Grid x:Name="OperationArea" Grid.Row="1" Visibility="Collapsed">
                                        <ContentControl x:Name="OperationContainer" HorizontalAlignment="Right"
                                                        Margin="{TemplateBinding OperationPadding}" Content="{TemplateBinding OperationContent}">
                                            <ContentControl.Resources>
                                                <Style TargetType="Button" BasedOn="{StaticResource DefaultButtonStyle}">
                                                    <Setter Property="MinWidth" Value="90" />
                                                </Style>
                                            </ContentControl.Resources>
                                        </ContentControl>
                                    </Grid>
                                </Grid>
                            </Border>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="controls:RecentPlayedItemControl" BasedOn="{StaticResource DefaultRecentPlayedItem}"/>

    <Style x:Key="DefaultRecentPlayedItemStyle" TargetType="controls:RecentPlayedItemControl">
        <Setter Property="Padding" Value="5"/>
        <Setter Property="CornerRadius" Value="{ThemeResource ContentAreaCornerRadius}"/>
        <Setter Property="Background" Value="{ThemeResource FloatLayerBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{ThemeResource CardStrokeBrush}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:RecentPlayedItemControl">
                    <Grid Margin="{TemplateBinding Padding}">
                        <Border x:Name="PART_Border" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="{TemplateBinding CornerRadius}">
                            <Border.OpacityTransition>
                                <ScalarTransition/>
                            </Border.OpacityTransition>
                        </Border>
                        <Border x:Name="PART_Background" Opacity="0" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}">
                            <Border.OpacityTransition>
                                <ScalarTransition/>
                            </Border.OpacityTransition>
                        </Border>
                        <ContentPresenter/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="controls:IconButton" BasedOn="{StaticResource DefaultIconButtonStyle}"/>

    <Style x:Key="DefaultIconButtonStyle" TargetType="controls:IconButton">
        <Style.Setters>
            <Setter Property="Background" Value="{ThemeResource SubtleFillColorSecondaryBrush}" />
            <Setter Property="BorderBrush" Value="{ThemeResource HyperlinkButtonBorderThemeBrush}" />
            <Setter Property="BorderThickness" Value="{ThemeResource HyperlinkButtonBorderThemeThickness}" />
            <Setter Property="Padding" Value="{ThemeResource ButtonPadding}"/>
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
            <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="controls:IconButton">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="Common">
                                    <VisualState x:Name="Normal">
                                        <VisualState.Storyboard>
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Background" Storyboard.TargetProperty="Opacity">
                                                    <LinearDoubleKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="0.0" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimation Storyboard.TargetName="PART_Transform" Storyboard.TargetProperty="ScaleX" Duration="{StaticResource ControlFasterAnimationDuration}" From="1.0" To="0.95"/>
                                                <DoubleAnimation Storyboard.TargetName="PART_Transform" Storyboard.TargetProperty="ScaleY" Duration="{StaticResource ControlFasterAnimationDuration}" From="1.0" To="0.95"/>
                                            </Storyboard>
                                        </VisualState.Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="PointerOver">
                                        <VisualState.Storyboard>
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Background" Storyboard.TargetProperty="Opacity">
                                                    <LinearDoubleKeyFrame KeyTime="{StaticResource ControlFasterAnimationDuration}" Value="1.0" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimation Storyboard.TargetName="PART_Transform" Storyboard.TargetProperty="ScaleX" Duration="{StaticResource ControlFasterAnimationDuration}" From="1.05" To="1.0">
                                                    <DoubleAnimation.EasingFunction>
                                                        <SineEase EasingMode="EaseIn"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                                <DoubleAnimation Storyboard.TargetName="PART_Transform" Storyboard.TargetProperty="ScaleY" Duration="{StaticResource ControlFasterAnimationDuration}" From="1.05" To="1.0">
                                                    <DoubleAnimation.EasingFunction>
                                                        <SineEase EasingMode="EaseIn"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                            </Storyboard>
                                        </VisualState.Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <VisualState.Setters>
                                            <Setter Target="PART_Background.Opacity" Value="1"/>
                                            <Setter Target="PART_Background.Background" Value="{ThemeResource HyperlinkButtonBackgroundPressed}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <VisualState.Setters>
                                            <Setter Target="PART_Container.Foreground" Value="{ThemeResource ButtonDisabledForegroundThemeBrush}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>

                            <Border x:Name="PART_Background" Opacity="0" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" RenderTransformOrigin="0.5,0.5">
                                <Border.RenderTransform>
                                    <ScaleTransform x:Name="PART_Transform"/>
                                </Border.RenderTransform>
                            </Border>
                            <ContentPresenter x:Name="PART_Container" Margin="{TemplateBinding Padding}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>

    <Style TargetType="controls:Card" BasedOn="{StaticResource DefaultCardStyle}"/>

    <Style x:Key="DefaultCardStyle" TargetType="controls:Card">
        <Setter Property="Padding" Value="15"/>
        <Setter Property="Background" Value="{ThemeResource CardBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{ThemeResource CardStrokeBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="{ThemeResource ContentAreaCornerRadius}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:Card">
                    <Grid CornerRadius="{TemplateBinding CornerRadius}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter Margin="{TemplateBinding Padding}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="controls:GroupBox" BasedOn="{StaticResource DefaultGroupBoxStyle}"/>

    <Style x:Key="DefaultGroupBoxStyle" TargetType="controls:GroupBox">
        <Setter Property="Background" Value="{ThemeResource CardBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{ThemeResource CardStrokeBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="{ThemeResource ItemAreaCornerRadius}"/>
        <Setter Property="Padding" Value="15"/>
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border BorderThickness="0,0,0,1" BorderBrush="{ThemeResource CardStrokeBrush}">
                        <TextBlock Text="{Binding}" Style="{StaticResource SubtitleTextBlockStyle}" Margin="20,10,20,10"/>
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:GroupBox">
                    <Grid RowDefinitions="Auto,*"  CornerRadius="{TemplateBinding CornerRadius}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}"/>
                        </Grid>
                        <ContentPresenter Grid.Row="1" Margin="{TemplateBinding Padding}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="controls:GlowingButton">
        <Setter Property="Padding" Value="20,8,20,8"/>
        <Setter Property="Background" Value="{ThemeResource SystemAccentColorDark1}"/>
        <Setter Property="GlowColor" Value="{ThemeResource SystemAccentColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:GlowingButton">
                    <Border x:Name="PART_Background" Background="{TemplateBinding Background}">
                        <ui:Effects.Shadow>
                            <media:AttachedCardShadow x:Name="PART_Shadow" Offset="0" BlurRadius="8" Color="{ThemeResource SystemAccentColor}" Opacity="0"/>
                        </ui:Effects.Shadow>
                        <animations:Explicit.Animations>
                            <animations:AnimationSet x:Name="PointerEnter">
                                <animations:OpacityDropShadowAnimation To="1.0" />
                            </animations:AnimationSet>
                            <animations:AnimationSet x:Name="PointerLeave">
                                <animations:OpacityDropShadowAnimation To="0" />
                            </animations:AnimationSet>
                        </animations:Explicit.Animations>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="Common">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PART_Layer" Storyboard.TargetProperty="Opacity" To="0" Duration="{StaticResource ControlNormalAnimationDuration}"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PART_Layer" Storyboard.TargetProperty="Opacity" To="1" Duration="{StaticResource ControlFasterAnimationDuration}"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PART_Background" Storyboard.TargetProperty="Opacity" To="0.7" Duration="{StaticResource ControlFasterAnimationDuration}"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <interactivity:Interaction.Behaviors>
                            <interactions:EventTriggerBehavior EventName="PointerEntered">
                                <behaviors:StartAnimationAction Animation="{Binding ElementName=PointerEnter}"/>
                            </interactions:EventTriggerBehavior>
                            <interactions:EventTriggerBehavior EventName="PointerExited">
                                <behaviors:StartAnimationAction Animation="{Binding ElementName=PointerLeave}"/>
                            </interactions:EventTriggerBehavior>
                        </interactivity:Interaction.Behaviors>
                        <Grid>
                            <Rectangle x:Name="PART_Layer" Fill="{ThemeResource ContentDialogTopOverlay}" Opacity="0"/>
                            <ContentPresenter x:Name="Container"  Margin="{TemplateBinding Padding}"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="controls:ExpanderEx">
        <Setter Property="CornerRadius" Value="{ThemeResource ItemAreaCornerRadius}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:ExpanderEx">
                    <!-- TODO -->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
